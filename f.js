var builtIn = {

Not: {"settings":{"name":"current","width":3,"shape":"normal","script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":0,"y":0,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":2,"y":-2,"type":"PMOS","setFromIC":false,"rotation":0,"bits":1},{"x":2,"y":2,"type":"NMOS","setFromIC":false,"rotation":0,"bits":1},{"x":3,"y":-4,"type":"Supply","setFromIC":false,"rotation":0,"bits":1},{"x":3,"y":4,"type":"Ground","setFromIC":false,"rotation":0},{"x":4,"y":0,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"","inverted":[],"small":false,"numFormat":"dec"}],"wires":[0,0,1,0,1,-2,2,-2,3,-4,3,-3,3,-1,3,1,1,2,2,2,1,-2,1,2,3,0,4,0,3,3,3,4]},

"And": {"settings":{"name":"current","width":3,"script":"inputs = +inputs;\n\nfor(var i = 0; i < inputs; i++) {\n  addComponent('PMOS',3*i,-2);\n  if (i > 0) {\naddWire(3*i+1,-1,3*i+1,0);\naddWire(-1,4*i+2,-1,4*i);\n  } else {\naddWire(-1,4*i+2,-1,4*i-2);\n  }\n  addWire(3*i+1,-3,3*i+1,-4);\n  addComponent('Supply',3*i+1,-4);\n  addComponent('NMOS',0,4*i+2);\n  addWire(1,4*i+1,1,4*i-1);\n  addWire(3*i-1,-2,3*i,-2);\n  addWire(-1,4*i+2,0,4*i+2);\n  if (i === inputs-1) {\naddWire(1,4*i+3,1,4*i+4);\naddComponent('Ground',1,4*i+4);\n  }\n  addWire(-2,4*i,3*i-1,4*i);\n  addWire(3*i-1,4*i,3*i-1,-2);\n  addComponent('Input',-2,4*i);\n}\nvar xx = inputs*3-1;\naddWire(1,0,xx,0);\naddWire(xx,-2,xx,2);\naddWire(xx,2,xx+1,2);\naddWire(xx,-2,xx+1,-2);\naddComponent('NMOS',xx+1,2);\naddComponent('PMOS',xx+1,-2);\naddWire(xx+2,-1,xx+2,1);\naddWire(xx+2,3,xx+2,4);\naddWire(xx+2,-3,xx+2,-4);\naddComponent('Supply',xx+2,-4);\naddComponent('Ground',xx+2,4);\naddWire(xx+2,0,xx+3,0);\naddComponent('Output',xx+3,0);","parameters":["inputs"],"frequency":1,"compiled":null},"components":[],"wires":[]},

"Or": {"settings":{"name":"current","width":3,"script":"inputs = +inputs;\n\nfor(var i = 0; i < inputs; i++) {\n  addComponent('NMOS',3*i,2);\n\n  if (i > 0) {\naddWire(3*i+1,1,3*i+1,0);\naddWire(-1,-4*i-2,-1,-4*i);\n  } else {\naddWire(-1,-4*i-2,-1,-4*i+2);\n  }\n  addWire(3*i+1,3,3*i+1,4);\n  addComponent('Ground',3*i+1,4);\n  addComponent('PMOS',0,-4*i-2);\n  addWire(1,-4*i-1,1,-4*i+1);\n  addWire(3*i-1,2,3*i,2);\n  addWire(-1,-4*i-2,0,-4*i-2);\n  if (i === inputs-1) {\naddWire(1,-4*i-3,1,-4*i-4);\naddComponent('Supply',1,-4*i-4);\n  }\n  addWire(-2,-4*i,3*i-1,-4*i);\n  addWire(3*i-1,-4*i,3*i-1,2);\n  addComponent('Input',-2,-4*i);\n}\nvar xx = inputs*3-1;\naddWire(1,0,xx,0);\naddWire(xx,-2,xx,2);\naddWire(xx,2,xx+1,2);\naddWire(xx,-2,xx+1,-2);\naddComponent('NMOS',xx+1,2);\naddComponent('PMOS',xx+1,-2);\naddWire(xx+2,-1,xx+2,1);\naddWire(xx+2,3,xx+2,4);\naddWire(xx+2,-3,xx+2,-4);\naddComponent('Supply',xx+2,-4);\naddComponent('Ground',xx+2,4);\naddWire(xx+2,0,xx+3,0);\naddComponent('Output',xx+3,0);","parameters":["inputs"],"frequency":1,"compiled":null},"components":[],"wires":[]},

"Xor": {"settings":{"name":"current","width":3,"shape":"normal","script":"inputs = +inputs;if (inputs === 1) {addComponent('Input',-1,0);addComponent('Output',0,0);addWire(-1,0,0,0);} else if (inputs === 2) {addComponent('Input',-1,0);addComponent('Input',-1,2);addComponent('Nand',2,0);addComponent('Or',2,4);addComponent('And',8,2);addWire(-1,0,2,0);addWire(-1,2,2,2);addWire(0,4,2,4);addWire(1,6,2,6);addWire(0,4,0,0);addWire(1,6,1,2);addWire(6,1,7,1);addWire(7,1,7,2);addWire(7,2,8,2);addWire(5,5,7,5);addWire(7,5,7,4);addWire(7,4,8,4);addWire(11,3,12,3);addComponent('Output',12,3);} else {addWire(-1,0,0,0);for(var i = 0; i < inputs; i++) {  addComponent('Input',-1,2*i);  if (i > 0) {var x = 5*(i-1),y = 2*(i-1);addComponent('Xor',x,y);addWire(-1,y+2,x,y+2);addWire(x+3,y+1,x+4,y+1);if (i < inputs-1) {  addWire(x+4,y+1,x+4,y+2);  addWire(x+4,y+2,x+5,y+2);} else {  addComponent('Output',x+4,y+1);}  }}}","parameters":["inputs"],"frequency":1,"compiled":null,"inputs":"6"},"components":[],"wires":[]},

"Nand": {"settings":{"name":"current","width":3,"shape":"normal","script":"inputs = +inputs;if (inputs === 1) {  addComponent('Input',-1,0);  addComponent('Not',0,0);  addComponent('Output',3,0);  addWire(-1,0,0,0);  addWire(2,0,3,0);} else if (inputs === 2) {  addComponent('Input',-1,0);  addComponent('Input',-1,2);  addComponent('And',0,0);  addComponent('Not',4,1);  addComponent('Output',7,1);  addWire(-1,0,0,0);  addWire(-1,2,0,2);  addWire(3,1,4,1);  addWire(6,1,7,1);} else {  var and = addComponent('And',0,0);  and.inputs = inputs;  var i = 0;  var ov = 0;  while (ov < inputs) {if (i === inputs/2) {i++; continue;}var inp = addComponent('Input',-1,i);inp.width = inp.height = 1;addWire(-1,i,0,i);i++; ov++;  }  var y = (inputs - (inputs % 2)) / 2;  addComponent('Not',4,y);  addComponent('Output',7,y);  addWire(3,y,4,y);  addWire(6,y,7,y);}","parameters":["inputs"],"frequency":1,"compiled":null,"inputs":"6"},"components":[],"wires":[]},

"Nor": {"settings":{"name":"current","width":3,"shape":"normal","script":"inputs = +inputs;if (inputs === 1) {  addComponent('Input',-1,0);  addComponent('Not',0,0);  addComponent('Output',3,0);  addWire(-1,0,0,0);  addWire(2,0,3,0);} else if (inputs === 2) {  addComponent('Input',-1,0);  addComponent('Input',-1,2);  addComponent('Or',0,0);  addComponent('Not',4,1);  addComponent('Output',7,1);  addWire(-1,0,0,0);  addWire(-1,2,0,2);  addWire(3,1,4,1);  addWire(6,1,7,1);} else {  var or = addComponent('Or',0,0);  or.inputs = inputs;  var i = 0;  var ov = 0;  while (ov < inputs) {if (i === inputs/2) {i++; continue;}var inp = addComponent('Input',-1,i);inp.width = inp.height = 1;addWire(-1,i,0,i);i++; ov++;  }  var y = (inputs - (inputs % 2)) / 2;  addComponent('Not',4,y);  addComponent('Output',7,y);  addWire(3,y,4,y);  addWire(6,y,7,y);}","parameters":["inputs"],"frequency":1,"compiled":null,"inputs":"6"},"components":[],"wires":[]},

"Xnor": {"settings":{"name":"current","width":3,"shape":"normal","script":"inputs = +inputs;if (inputs === 1) {  addComponent('Input',-1,0);  addComponent('Not',0,0);  addComponent('Output',3,0);  addWire(-1,0,0,0);  addWire(2,0,3,0);} else if (inputs === 2) {  addComponent('Input',-1,0);  addComponent('Input',-1,2);  addComponent('Xor',0,0);  addComponent('Not',4,1);  addComponent('Output',7,1);  addWire(-1,0,0,0);  addWire(-1,2,0,2);  addWire(3,1,4,1);  addWire(6,1,7,1);} else {  var xor = addComponent('Xor',0,0);  xor.inputs = inputs;  var i = 0;  var ov = 0;  while (ov < inputs) {if (i === inputs/2) {i++; continue;}var inp = addComponent('Input',-1,i);inp.width = inp.height = 1;addWire(-1,i,0,i);i++; ov++;  }  var y = (inputs - (inputs % 2)) / 2;  addComponent('Not',4,y);  addComponent('Output',7,y);  addWire(3,y,4,y);  addWire(6,y,7,y);}","parameters":["inputs"],"frequency":1,"compiled":null,"inputs":"6"},"components":[],"wires":[]},

PullUp: {"settings":{"name":"current","width":3,"shape":"normal","script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":-1,"y":-3,"type":"Resistor","setFromIC":false,"rotation":0,"bits":1},{"x":-1,"y":-4,"type":"Supply","setFromIC":false,"rotation":0,"bits":1},{"x":0,"y":0,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"","inverted":[],"small":false,"numFormat":"dec"}],"wires":[-1,-4,-1,-3,-1,-1,-1,0,-1,0,0,0]},

PullDown: {"settings":{"name":"current","width":3,"shape":"normal","script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":-1,"y":1,"type":"Resistor","setFromIC":false,"rotation":0,"bits":1},{"x":0,"y":0,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"","inverted":[],"small":false,"numFormat":"dec"},{"x":-1,"y":4,"type":"Ground","setFromIC":false,"rotation":0}],"wires":[-1,3,-1,4,-1,1,-1,0,-1,0,0,0]},

Driver: {"settings":{"name":"current","width":3,"shape":"normal","script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":3,"y":-2,"type":"PMOS","setFromIC":false,"rotation":0,"bits":1},{"x":3,"y":2,"type":"NMOS","setFromIC":false,"rotation":0,"bits":1},{"x":-1,"y":6,"type":"PMOS","setFromIC":false,"rotation":0,"bits":1},{"x":-1,"y":10,"type":"NMOS","setFromIC":false,"rotation":0,"bits":1},{"x":0,"y":4,"type":"Supply","setFromIC":false,"rotation":0,"bits":1},{"x":4,"y":4,"type":"Ground","setFromIC":false,"rotation":0},{"x":0,"y":12,"type":"Ground","setFromIC":false,"rotation":0},{"x":4,"y":-4,"type":"Supply","setFromIC":false,"rotation":0,"bits":1},{"x":7,"y":4,"type":"PMOS","setFromIC":false,"rotation":0,"bits":1},{"x":7,"y":0,"type":"PMOS","setFromIC":false,"rotation":0,"bits":1},{"x":7,"y":8,"type":"NMOS","setFromIC":false,"rotation":0,"bits":1},{"x":7,"y":12,"type":"NMOS","setFromIC":false,"rotation":0,"bits":1},{"x":8,"y":-2,"type":"Supply","setFromIC":false,"rotation":0,"bits":1},{"x":8,"y":14,"type":"Ground","setFromIC":false,"rotation":0},{"x":-4,"y":8,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":0,"y":0,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":10,"y":6,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"","inverted":[],"small":false,"numFormat":"dec"}],"wires":[2,2,3,2,2,-2,3,-2,4,-1,4,1,4,-4,4,-3,4,3,4,4,-2,10,-1,10,-2,10,-2,6,-2,6,-1,6,0,7,0,9,0,4,0,5,0,11,0,12,4,0,7,0,0,8,7,8,6,8,6,4,6,4,7,4,2,-2,2,12,2,12,7,12,8,9,8,11,8,5,8,7,8,1,8,3,8,-2,8,-1,8,13,8,14,8,6,10,6,-4,8,-2,8,0,0,2,0]},

"Constant":{"settings":{"name":"","width":3,"script":"bits = +bits;\nvalue = (+value) & ((1 << bits)-1);\n\nvar sp = addComponent('Splitter',0,0);\nsp['input splitting'] = '1*' + bits;\nsp['output splitting'] = '' + bits;\n\nvar mins = null;\nvar maxg = null;\n\nfor (var i = 0; i < bits; i++) {\n  var s;\n  if ((1<<i) & value) {\naddWire(-2,i,0,i);\nmins = i;\n  } else {\naddWire(-1,i,0,i);\nif (maxg === null) maxg = i;\n  }\n}\n\nif (mins !== null) {\n  addWire(-2,-1,-2,mins);\n  addComponent('Supply',-2,-1);\n}\nif (maxg !== null) {\n  addWire(-1,bits+1,-1,maxg);\n  addComponent('Ground',-1,bits+1);\n}\n\nvar out = addComponent('Output',1,0);\nout.bits = bits;","parameters":["bits","value"],"frequency":1},"components":[],"wires":[]},

"Decoder":{"settings":{"name":"Decoder","width":2,"script":"bits = +bits;\n\nif (bits === 1) {\n  addComponent('Input',0,0);\n  addWire(0,0,2,0);\n  addWire(1,0,1,1);\n  addWire(1,1,2,1);\n  addComponent('Not',2,0);\n  addComponent('Buffer',2,1);\n  var out0 = addComponent('Output',4,0);\n  out0.label = '0';\n  var out1 = addComponent('Output',4,1);\n  out1.label = '1';\n  return;\n}\n\nvar lines = 1 << bits;\n\nvar g = bits + (1 - bits%2);\n\nfor (var i = 0; i < lines; i++) {\n  var a = addComponent('And',0,i*g);\n  addWire(3,Math.floor((i+.5)*g),4,Math.floor((i+.5)*g));\n  var out = addComponent('Output',4,Math.floor((i+.5)*g));\n  out.label = '' + i;\n  a.inputs = bits;\n  var inv = [];\n  for (var j = 0; j < bits; j++) {\nvar y = i*g+j + (j>=bits/2)*(1-bits%2);\nif ((1<<j) & i) {\n  addWire(-1,y,0,y);\n} else {\n  inv.push(j);\n}\naddWire(-2-j,y,-1,y);\naddWire(-2-j,y,-2-j,Math.max(j,y-g));\n  }\n  a.inverted = inv;\n}\n\nvar s = addComponent('Splitter',-2-bits,0);\ns['input splitting'] = '' + bits;\ns['output splitting'] = '1*' + bits;\n\nfor (var i = 0; i < bits; i++) {\n  addWire(-2-i,i,-1 - bits,i);\n}\n\n\nvar inp = addComponent('Input',-2 - bits,0);\ninp.bits = +bits;\n","parameters":["bits"],"frequency":1},"components":[],"wires":[]},

"Multiplexer":{"settings":{"name":"","width":2,"script":"sbits = +sbits;\ndbits = +dbits;\n\nif (sbits === 1) {\n  var sel = addComponent('Input',0,0);\n  sel.label = 'sel';\n  var inp0 = addComponent('Input',2,1);\n  var inp1 = addComponent('Input',2,3);\n  var dr0 = addComponent('DriverInv',2,1);\n  var dr1 = addComponent('Driver',2,3);\n  var out = addComponent('Output',6,1);\n  inp0.bits = inp1.bits = dr0.bits = dr1.bits = out.bits = dbits;\n  inp0.label = '0';\n  inp1.label = '1';\n  addWire(0,0,3,0);\n  addWire(3,0,3,2);\n  addWire(4,1,6,1);\n  addWire(4,3,5,3);\n  addWire(5,1,5,3);\n\n  return;\n}\n\nvar lines = 1 << sbits;\n\nvar dc = addComponent('Decoder',0,0);\ndc.sbits = sbits;\n\n\nvar sy = sbits === 1 ? 2 :(1<<sbits) - 1;\naddWire(0,sy,1,sy);\nvar sel = addComponent('Input',0,sy);\nsel.label = 'sel';\nsel.bits = sbits;\n\nvar sp = addComponent('Splitter',2,0);\nsp['input splitting'] = '1*' + lines;\nsp['output splitting'] = '' + lines;\n\nvar mg = addComponent('Splitter',3,0);\nmg['input splitting'] = '' + lines;\nmg['output splitting'] = '1*' + lines;\nmg.spreading = 2;\n\n\nfor(var i = 0; i < lines; i++) {\n  var inp = addComponent('Input',6,2*i+1);\n  inp.label = '' + i;\n  inp.bits = dbits;\n  addWire(4,2*i,7,2*i);\n  var drv = addComponent('Driver',6,2*i+1);\n  drv.bits = dbits;\n  addWire(8,2*i+1,9+(i===0),2*i+1);\n  if (i > 0) addWire(9,2*i+1,9,2*i-1);\n}\n\nvar out = addComponent('Output',10,1);\nout.bits = dbits;\n","parameters":["sbits","dbits"],"frequency":1},"components":[],"wires":[]},

"Demultiplexer":{"settings":{"name":"","width":2,"script":"sbits = +sbits;\ndbits = +dbits;\n\nif (sbits === 1) {\n  var sel = addComponent('Input',0,0);\n  sel.label = 'sel';\n  var out0 = addComponent('Output',4,1);\n  var out1 = addComponent('Output',4,3);\n  var pd0 = addComponent('PullDown',4,1);\n  var pd1 = addComponent('PullDown',4,3);\n  var dr0 = addComponent('DriverInv',2,1);\n  var dr1 = addComponent('Driver',2,3);\n  var inp = addComponent('Input',0,1);\n  out0.bits = out1.bits = pd0.bits = pd1.bits = dr0.bits = dr1.bits = inp.bits = dbits;\n  out0.label = '0';\n  out1.label = '1';\n  addWire(0,0,3,0);\n  addWire(3,0,3,2);\n  addWire(0,1,2,1);\n  addWire(2,3,1,3);\n  addWire(1,1,1,3);\n\n  return;\n}\n\nvar lines = 1 << sbits;\n\nvar dc = addComponent('Decoder',0,0);\ndc.bits = sbits;\n\n\nvar sy = sbits === 1 ? 2 :(1<<sbits) - 1;\naddWire(0,sy,1,sy);\nvar sel = addComponent('Input',0,sy);\nsel.label = 'sel';\nsel.bits = sbits;\n\nvar sp = addComponent('Splitter',2,0);\nsp['input splitting'] = '1*' + lines;\nsp['output splitting'] = '' + lines;\n\nvar mg = addComponent('Splitter',3,0);\nmg['input splitting'] = '' + lines;\nmg['output splitting'] = '1*' + lines;\nmg.spreading = 2;\n\n\nfor(var i = 0; i < lines; i++) {\n  var out = addComponent('Output',8,2*i+1);\n  var pd = addComponent('PullDown',8,2*i+1);\n  out.label = '' + i;\n  out.bits = dbits;\n  pd.bits = dbits;\n  addWire(4,2*i,7,2*i);\n  var drv = addComponent('Driver',6,2*i+1);\n  drv.bits = dbits;\n  addWire(6,2*i+1,5-(i===0),2*i+1);\n  if (i > 0) addWire(5,2*i+1,5,2*i-1);\n}\n\nvar inp = addComponent('Input',4,1);\ninp.bits = dbits;\n","parameters":["sbits","dbits"],"frequency":1},"components":[],"wires":[]},


};

condense = txt => console.log(txt.replaceAll('    ','').replaceAll('\n','').replaceAll(': ',':'));

examples = {
  "+edgePulseDetector": {"settings":{"name":"current","width":"2","shape":"normal","script":"steps = +steps;for(var i = 1; i < steps; i++) {  addComponent('Buffer',-2-i*2,2);}addWire(-1-steps*2,0,0,0);addWire(-1-steps*2,0,-1-steps*2,2);addWire(-1-steps*2,2,-steps*2,2);addWire(-1-steps*2,1,-2-steps*2,1);var inp = addComponent('Input',-2-steps*2,1);inp.label = 'CLK';","parameters":["steps"],"frequency":1,"compiled":null,"steps":"2"},"components":[{"x":0,"y":0,"type":"And","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false,"multiBit":false},{"x":-2,"y":2,"type":"Not","setFromIC":false,"rotation":0,"bits":1,"inverted":[],"mirror":false,"compliment":false,"small":true},{"x":4,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"+","inverted":[],"small":false,"numFormat":"dec"}],"wires":[3,1,4,1]},

  "-edgePulseDetector": {"settings":{"name":"current","width":"2","shape":"normal","script":"steps = +steps;for(var i = 1; i < steps; i++) {  addComponent('Buffer',-2-i*2,2);}addWire(-1-steps*2,0,0,0);addWire(-1-steps*2,0,-1-steps*2,2);addWire(-1-steps*2,2,-steps*2,2);addWire(-1-steps*2,1,-2-steps*2,1);var inp = addComponent('Input',-2-steps*2,1);inp.label = 'CLK';","parameters":["steps"],"frequency":1,"compiled":null,"steps":"2"},"components":[{"x":-2,"y":2,"type":"Not","setFromIC":false,"rotation":0,"bits":1,"inverted":[],"mirror":false,"compliment":false,"small":true},{"x":5,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":char.neg,"inverted":[],"small":false,"numFormat":"dec"},{"x":0,"y":0,"type":"Nor","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false,"multiBit":false}],"wires":[4,1,5,1]},

  "dualEdgePulseDetector": {"settings":{"name":"current","width":"2","shape":"normal","script":"steps = +steps;for(var i = 1; i < steps; i++) {  addComponent('Buffer',-2-i*2,2);}addWire(-1-steps*2,0,0,0);addWire(-1-steps*2,0,-1-steps*2,2);addWire(-1-steps*2,2,-steps*2,2);addWire(-1-steps*2,1,-2-steps*2,1);var inp = addComponent('Input',-2-steps*2,1);inp.label = 'CLK';","parameters":["steps"],"frequency":1,"compiled":null,"steps":"2"},"components":[{"x":-2,"y":2,"type":"Not","setFromIC":false,"rotation":0,"bits":1,"inverted":[],"mirror":false,"compliment":false,"small":true},{"x":5,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":char.pm,"inverted":[],"small":false,"numFormat":"dec"},{"x":0,"y":0,"type":"Xnor","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false,"multiBit":false}],"wires":[4,1,5,1]},

  "SR Latch": {"settings":{"name":"SR Latch","width":2,"shape":"normal","script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":6,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":6,"y":6,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":-2,"y":0,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"S","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-2,"y":7,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"R","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":0,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[1,2],"mirror":false,"compliment":false},{"x":0,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[0],"mirror":false,"compliment":false},{"x":-2,"y":6,"type":"Reset","setFromIC":false,"rotation":0,"inverted":[],"bits":1}],"wires":[0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,6,4,6,6,6,4,1,6,1,-2,7,-1,7,-2,0,-1,0]},
  "Gated SR Latch": {"settings":{"name":"Gated SR Latch","width":2,"shape":"normal","script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":6,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":6,"y":6,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":-7,"y":-1,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"S","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-7,"y":4,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"E","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-7,"y":8,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"R","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-5,"y":-1,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":0,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[1],"mirror":false,"compliment":false},{"x":0,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":6,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":-2,"y":6,"type":"Reset","setFromIC":false,"rotation":0,"inverted":[],"bits":1}],"wires":[-6,1,-6,6,-7,-1,-5,-1,-6,1,-5,1,-6,6,-5,6,-7,8,-5,8,-7,4,-6,4,0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,6,4,6,6,6,4,1,6,1,-1,0,0,0,-1,7,0,7]},
  "D Latch": {"settings":{"name":"D Latch","width":2,"shape":"normal","script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":6,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":6,"y":6,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":-8,"y":-1,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"D","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-8,"y":6,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"E","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-5,"y":-1,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":0,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[1],"mirror":false,"compliment":false},{"x":0,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":6,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[1],"mirror":false,"compliment":false},{"x":-2,"y":6,"type":"Reset","setFromIC":false,"rotation":0,"inverted":[],"bits":1}],"wires":[0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,6,4,6,6,6,4,1,6,1,-1,0,0,0,-1,7,0,7,-6,1,-6,6,-6,1,-5,1,-7,8,-6,8,-7,8,-7,-1,-8,-1,-5,-1,-8,6,-5,6]},
  "JK Latch": {"settings":{"name":"JK Latch","width":2,"shape":"normal","script":null,"parameters":[],"frequency":"1","compiled":null},"components":[{"x":8,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":8,"y":6,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":-7,"y":0,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"J","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-7,"y":4,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"E","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-7,"y":7,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"K","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-5,"y":-1,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":0,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[1],"mirror":false,"compliment":false},{"x":0,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":6,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":-2,"y":6,"type":"Reset","setFromIC":false,"rotation":0,"inverted":[],"bits":1}],"wires":[0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,6,4,6,8,6,4,1,8,1,-1,0,0,0,-1,7,0,7,-6,1,-6,6,-7,0,-5,0,-6,1,-5,1,-6,6,-5,6,-7,7,-5,7,6,1,6,9,6,9,-6,9,-6,8,-6,9,-6,8,-5,8,7,6,7,-2,7,-2,-6,-2,-6,-2,-6,-1,-6,-1,-5,-1,-7,4,-6,4]},
  "T Latch": {"settings":{"name":"T Latch","width":2,"shape":"normal","script":null,"parameters":[],"frequency":"1","compiled":null},"components":[{"x":-5,"y":-1,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":0,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[1],"mirror":false,"compliment":false},{"x":8,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":8,"y":6,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":0,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":6,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":-8,"y":0,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"T","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-8,"y":4,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"E","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-2,"y":6,"type":"Reset","setFromIC":false,"rotation":0,"inverted":[],"bits":1}],"wires":[0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,6,4,6,8,6,4,1,8,1,-1,0,0,0,-1,7,0,7,-6,1,-6,6,-6,1,-5,1,-6,6,-5,6,-7,7,-5,7,6,1,6,9,6,9,-6,9,-6,8,-6,9,-6,8,-5,8,7,6,7,-2,7,-2,-6,-2,-6,-2,-6,-1,-6,-1,-5,-1,-8,4,-6,4,-7,0,-7,7,-8,0,-5,0,-8,4,-8,4]},
  "SR Flip-Flop": {"settings":{"name":"SR Flip-Flop","width":2,"shape":"normal","script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":-7,"y":-1,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"S","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-10,"y":4,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-7,"y":8,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"R","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-9,"y":4,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"+edgePulseDetector","script":null},{"x":-5,"y":-1,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":0,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[1],"mirror":false,"compliment":false},{"x":6,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":6,"y":6,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":0,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":6,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":-2,"y":6,"type":"Reset","setFromIC":false,"rotation":0,"inverted":[],"bits":1}],"wires":[-6,1,-6,6,-7,-1,-5,-1,-6,1,-5,1,-6,6,-5,6,-7,8,-5,8,-10,4,-9,4,-7,4,-6,4,0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,6,4,6,6,6,4,1,6,1,-1,0,0,0,-1,7,0,7]},
  "D Flip-Flop": {"settings":{"name":"D Flip-Flop","width":2,"shape":"normal","script":"bits = +bits;if (bits === 1) {  addWire(-9,6,-8,6);} else {  var sp = addComponent('Splitter',-9,6);  sp['input splitting'] = '1*' + bits;  sp['output splitting'] = '' + bits;  sp.spreading = 0;}","parameters":["bits","value"],"frequency":1,"compiled":null,"bits":"1"},"components":[{"x":-5,"y":-1,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":0,"y":5,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":3,"inverted":[1],"mirror":false,"compliment":false},{"x":6,"y":1,"type":"Output","setFromIC":true,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":6,"y":6,"type":"Output","setFromIC":true,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":0,"y":0,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":6,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":2,"inverted":[1],"mirror":false,"compliment":false},{"x":-8,"y":-1,"type":"Input","setFromIC":true,"rotation":0,"bits":1,"label":"D","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-11,"y":6,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-11,"y":6,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"+edgePulseDetector","script":null},{"x":-2,"y":6,"type":"Reset","setFromIC":true,"rotation":0,"inverted":[],"bits":1}],"wires":[0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,6,4,6,6,6,4,1,6,1,-6,1,-6,6,-6,1,-5,1,-7,8,-6,8,-7,8,-7,-1,-8,-1,-5,-1,-8,6,-5,6,-1,7,0,7,-1,0,0,0]},
  "JK Flip-Flop": {"settings":{"name":"JK Flip-Flop","width":2,"shape":"normal","script":null,"parameters":[],"frequency":"10","compiled":null},"components":[{"x":8,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":8,"y":6,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":-7,"y":0,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"J","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-10,"y":4,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-7,"y":7,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"K","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-9,"y":4,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"+edgePulseDetector","script":null},{"x":-5,"y":-1,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":0,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[1],"mirror":false,"compliment":false},{"x":0,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":6,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":-2,"y":6,"type":"Reset","setFromIC":false,"rotation":0,"inverted":[],"bits":1}],"wires":[0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,6,4,6,8,6,4,1,8,1,-1,0,0,0,-1,7,0,7,-6,1,-6,6,-7,0,-5,0,-6,1,-5,1,-6,6,-5,6,-7,7,-5,7,6,1,6,9,6,9,-6,9,-6,8,-6,9,-6,8,-5,8,7,6,7,-2,7,-2,-6,-2,-6,-2,-6,-1,-6,-1,-5,-1,-7,4,-6,4,-10,4,-9,4]},
  "T Flip-Flop": {"settings":{"name":"T Flip-Flop","width":2,"shape":"normal","script":null,"parameters":[],"frequency":"10","compiled":null},"components":[{"x":-5,"y":-1,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":0,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[1],"mirror":false,"compliment":false},{"x":8,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":8,"y":6,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":0,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":6,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":-8,"y":0,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"T","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-11,"y":4,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-10,"y":4,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"+edgePulseDetector","script":null},{"x":-2,"y":6,"type":"Reset","setFromIC":false,"rotation":0,"inverted":[],"bits":1}],"wires":[0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,6,4,6,8,6,4,1,8,1,-1,0,0,0,-1,7,0,7,-6,1,-6,6,-6,1,-5,1,-6,6,-5,6,-7,7,-5,7,6,1,6,9,6,9,-6,9,-6,8,-6,9,-6,8,-5,8,7,6,7,-2,7,-2,-6,-2,-6,-2,-6,-1,-6,-1,-5,-1,-8,4,-6,4,-11,4,-10,4,-7,0,-7,7,-8,0,-5,0]},
  "Master Slave SR Flip-Flop": {"settings": {"name": "Master Slave SR Flip-Flop","width": 3,"script": null,"parameters": [],"frequency": 1,"compiled": null},"components": [{"x": 8,"y": 0,"type": "IC","setFromIC": false,"rotation": 0,"subcircuit": "D Flip-Flop","script": null},{"x": 3,"y": 4,"type": "Not","setFromIC": false,"rotation": 0,"bits": 1,"inverted": [],"small": true},{"x": 12,"y": 0,"type": "Output","setFromIC": false,"rotation": 0,"bits": 1,"label": "Q","inverted": [],"small": false,"numFormat": "dec"},{"x": 12,"y": 2,"type": "Output","setFromIC": false,"rotation": 0,"bits": 1,"label": "~Q","inverted": [],"small": false,"numFormat": "dec"},{"x": 3,"y": 0,"type": "IC","setFromIC": false,"rotation": 0,"subcircuit": "SR Flip-Flop","script": null},{"x": 7,"y": 4,"type": "PullUp","setFromIC": false,"rotation": 3,"bits": 1},{"x": 5,"y": 0,"type": "PullDown","setFromIC": false,"rotation": 2,"bits": 1},{"x": 0,"y": 0,"type": "Input","setFromIC": false,"rotation": 0,"bits": 1,"label": "S","dual": false,"inverted": [],"width": 1.5,"height": 1.5,"numFormat": "dec"},{"x": 0,"y": 4,"type": "Input","setFromIC": false,"rotation": 0,"bits": 1,"label": "CLK","dual": false,"inverted": [],"width": 1.5,"height": 1.5,"numFormat": "dec"},{"x": 0,"y": 2,"type": "Input","setFromIC": false,"rotation": 0,"bits": 1,"label": "R","dual": false,"inverted": [],"width": 1.5,"height": 1.5,"numFormat": "dec"}],"wires": [0,0,3,0,0,4,3,4,2,1,3,1,2,1,2,4,5,4,7,4,7,4,7,1,7,1,8,1,10,0,12,0,10,1,11,1,11,1,11,2,11,2,12,2,0,2,3,2,5,0,8,0]},
  "Master Slave D Flip-Flop": {"settings":{"name":"Master Slave D Flip-Flop","width":3,"script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":3,"y":0,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"D Flip-Flop","script":null},{"x":8,"y":0,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"D Flip-Flop","script":null},{"x":0,"y":0,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"D","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":3,"y":3,"type":"Not","setFromIC":false,"rotation":0,"bits":1,"inverted":[],"small":true},{"x":0,"y":3,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":12,"y":0,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":12,"y":3,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":8,"y":0,"type":"PullUp","setFromIC":false,"rotation":0,"bits":1}],"wires":[0,0,3,0,0,3,3,3,2,1,3,1,2,1,2,3,5,3,7,3,7,3,7,1,7,1,8,1,5,0,8,0,10,0,12,0,10,1,11,1,11,1,11,3,11,3,12,3]},
  "Master Slave JK Flip-Flop": {"settings":{"Master Slave JK Flip-Flop":"current","width":3,"script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":8,"y":0,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"D Flip-Flop","script":null},{"x":3,"y":4,"type":"Not","setFromIC":false,"rotation":0,"bits":1,"inverted":[],"small":true},{"x":12,"y":0,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":12,"y":2,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":7,"y":4,"type":"PullUp","setFromIC":false,"rotation":3,"bits":1},{"x":5,"y":0,"type":"PullDown","setFromIC":false,"rotation":2,"bits":1},{"x":0,"y":0,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"J","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":0,"y":4,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":0,"y":2,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"K","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":3,"y":0,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"JK Flip-Flop","script":null}],"wires":[0,0,3,0,0,4,3,4,2,1,3,1,2,1,2,4,5,4,7,4,7,4,7,1,7,1,8,1,10,0,12,0,10,1,11,1,11,1,11,2,11,2,12,2,0,2,3,2,5,0,8,0]},
  "Master Slave T Flip-Flop": {"settings":{"name":"Master Slave T Flip-Flop","width":3,"script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":8,"y":0,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"D Flip-Flop","script":null},{"x":0,"y":0,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"T","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":3,"y":3,"type":"Not","setFromIC":false,"rotation":0,"bits":1,"inverted":[],"small":true},{"x":0,"y":3,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":12,"y":0,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":12,"y":3,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":3,"y":0,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"T Flip-Flop","script":null},{"x":7,"y":3,"type":"PullUp","setFromIC":false,"rotation":3,"bits":1},{"x":5,"y":0,"type":"PullDown","setFromIC":false,"rotation":2,"bits":1}],"wires":[0,0,3,0,0,3,3,3,2,1,3,1,2,1,2,3,5,3,7,3,7,3,7,1,7,1,8,1,5,0,8,0,10,0,12,0,10,1,11,1,11,1,11,3,11,3,12,3]},
  "SR Flip-Flop w/ preset+clear": {"settings":{"name":"SR Flip-Flop w/ preset+clear","width":"3","shape":"normal","script":null,"parameters":[],"frequency":1,"compiled":null},"components":[{"x":-5,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":0,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":4,"inverted":[2],"mirror":false,"compliment":false},{"x":6,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":6,"y":7,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":0,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":-7,"y":0,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"S","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-10,"y":4,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-7,"y":7,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"R","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-9,"y":4,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"+edgePulseDetector","script":null},{"x":-2,"y":-2,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"~PRE","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-2,"y":11,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"~CLR","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-2,"y":8,"type":"Reset","setFromIC":false,"rotation":0,"inverted":[],"bits":1}],"wires":[0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,7,4,7,6,7,4,1,6,1,-1,1,0,1,-1,6,0,6,-6,2,-6,5,-7,0,-5,0,-6,2,-5,2,-6,5,-5,5,-7,7,-5,7,-10,4,-9,4,-7,4,-6,4,-2,-2,-1,-2,-1,-2,-1,0,-1,0,0,0,-2,11,-1,11,-1,9,-1,11,-1,9,0,9]},
  "D Flip-Flop w/ preset+clear": {"settings":{"name":"D Flip-Flop w/ preset+clear","width":3,"shape":"normal","script":"bits = +bits;if (bits === 1) {  addWire(-9,6,-8,6);} else {  var sp = addComponent('Splitter',-9,6);  sp['input splitting'] = '1*' + bits;  sp['output splitting'] = '' + bits;  sp.spreading = 0;}","parameters":["bits","value"],"frequency":1,"compiled":null,"bits":"1"},"components":[{"x":7,"y":2,"type":"Output","setFromIC":true,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":7,"y":8,"type":"Output","setFromIC":true,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":-8,"y":1,"type":"Input","setFromIC":true,"rotation":0,"bits":1,"label":"D","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-11,"y":6,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-11,"y":6,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"+edgePulseDetector","script":null},{"x":-1,"y":-1,"type":"Input","setFromIC":true,"rotation":0,"bits":1,"label":"~PRE","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-1,"y":12,"type":"Input","setFromIC":true,"rotation":0,"bits":1,"label":"~CLR","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-5,"y":1,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false},{"x":1,"y":6,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":4,"inverted":[2],"mirror":false,"compliment":false},{"x":1,"y":1,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":6,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":2,"inverted":[1],"mirror":false,"compliment":false},{"x":-1,"y":9,"type":"Reset","setFromIC":true,"rotation":0,"inverted":[],"bits":1}],"wires":[1,6,0,6,0,6,0,5,0,5,6,3,6,3,6,2,1,3,0,3,0,3,0,4,0,4,6,6,6,6,6,8,5,8,7,8,5,2,7,2,-1,2,1,2,-1,7,1,7,-6,3,-6,6,-6,3,-5,3,-11,6,-11,6,-7,8,-6,8,-7,8,-7,1,-8,1,-5,1,-8,6,-5,6,0,-1,0,1,0,1,1,1,-1,12,0,12,0,10,0,12,0,10,1,10,-1,-1,0,-1]},
  "JK Flip-Flop w/ preset+clear": {"settings":{"name":"JK Flip-Flop w/ preset+clear","width":"3","shape":"normal","script":null,"parameters":[],"frequency":"10","compiled":null},"components":[{"x":-5,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":0,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":4,"inverted":[2],"mirror":false,"compliment":false},{"x":8,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":8,"y":7,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":0,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":-7,"y":1,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"J","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-10,"y":4,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-7,"y":6,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"K","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-9,"y":4,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"+edgePulseDetector","script":null},{"x":-2,"y":-2,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"~PRE","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-2,"y":11,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"~CLR","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-2,"y":8,"type":"Reset","setFromIC":false,"rotation":0,"inverted":[],"bits":1}],"wires":[0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,7,4,7,8,7,4,1,8,1,-1,1,0,1,-1,6,0,6,-6,2,-6,5,-7,1,-5,1,-6,2,-5,2,-6,5,-5,5,-7,6,-5,6,6,1,6,10,6,10,-6,10,-6,7,-6,10,-6,7,-5,7,7,7,7,-1,7,-1,-6,-1,-6,-1,-6,0,-6,0,-5,0,-7,4,-6,4,-10,4,-9,4,-1,9,-1,11,-1,9,0,9,-2,-2,-1,-2,-1,-2,-1,0,-1,0,0,0,-2,11,-1,11]},
  "T Flip-Flop w/ preset+clear": {"settings":{"name":"T Flip-Flop w/ preset+clear","width":"3","shape":"normal","script":null,"parameters":[],"frequency":"10","compiled":null},"components":[{"x":-5,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":8,"y":1,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":8,"y":7,"type":"Output","setFromIC":false,"rotation":0,"bits":1,"label":"~Q","inverted":[],"small":false,"numFormat":"dec"},{"x":0,"y":0,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":-5,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":3,"inverted":[],"mirror":false,"compliment":false},{"x":-8,"y":1,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"T","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-11,"y":4,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-10,"y":4,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"+edgePulseDetector","script":null},{"x":-2,"y":-2,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"~PRE","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-2,"y":11,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"~CLR","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":0,"y":5,"type":"Nand","setFromIC":false,"rotation":0,"bits":1,"inputs":4,"inverted":[2],"mirror":false,"compliment":false},{"x":-2,"y":8,"type":"Reset","setFromIC":false,"rotation":0,"inverted":[],"bits":1}],"wires":[0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,7,4,7,8,7,4,1,8,1,-1,1,0,1,-1,6,0,6,-6,2,-6,5,-6,2,-5,2,-6,5,-5,5,-7,6,-5,6,6,1,6,10,6,10,-6,10,-6,7,-6,10,-6,7,-5,7,7,7,7,-1,7,-1,-6,-1,-6,-1,-6,0,-6,0,-5,0,-8,4,-6,4,-11,4,-10,4,-7,1,-7,6,-8,1,-5,1,-2,-2,-1,-2,-1,-2,-1,0,-1,0,0,0,-2,11,-1,11,-1,9,-1,11,-1,9,0,9]},

  "Register": {"settings":{"name":"Register","width":3,"shape":"normal","script":"bits = +bits;if (bits === 1) {  addWire(-9,6,-8,6);} else {  var sp = addComponent('Splitter',-9,6);  sp['input splitting'] = '1*' + bits;  sp['output splitting'] = '' + bits;  sp.spreading = 0;}","parameters":["bits"],"frequency":1,"compiled":null,"bits":"1"},"components":[{"x":-5,"y":-1,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false,"multiBit":false},{"x":0,"y":5,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":3,"inverted":[1],"mirror":false,"compliment":false,"multiBit":false},{"x":6,"y":1,"type":"Output","setFromIC":true,"rotation":0,"bits":1,"label":"Q","inverted":[],"small":false,"numFormat":"dec"},{"x":0,"y":0,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false,"multiBit":false},{"x":-5,"y":6,"type":"Nand","setFromIC":true,"rotation":0,"bits":1,"inputs":2,"inverted":[1],"mirror":false,"compliment":false,"multiBit":false},{"x":-8,"y":-1,"type":"Input","setFromIC":true,"rotation":0,"bits":1,"label":"D","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-14,"y":5,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"CLK","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"},{"x":-14,"y":5,"type":"IC","setFromIC":false,"rotation":0,"subcircuit":"+edgePulseDetector","script":"steps = +steps;for(var i = 1; i < steps; i++) {  addComponent('Buffer',-2-i*2,2);}addWire(-1-steps*2,0,0,0);addWire(-1-steps*2,0,-1-steps*2,2);addWire(-1-steps*2,2,-steps*2,2);addWire(-1-steps*2,1,-2-steps*2,1);var inp = addComponent('Input',-2-steps*2,1);inp.label = 'CLK';","location":"Examples","steps":"2"},{"x":-2,"y":6,"type":"Reset","setFromIC":true,"rotation":0,"inverted":[],"bits":1},{"x":-12,"y":5,"type":"And","setFromIC":false,"rotation":0,"bits":1,"inputs":2,"inverted":[],"mirror":false,"compliment":false,"multiBit":false},{"x":-14,"y":7,"type":"Input","setFromIC":false,"rotation":0,"bits":1,"label":"en","dual":false,"inverted":[],"width":1.5,"height":1.5,"numFormat":"dec"}],"wires":[0,5,-1,5,-1,5,-1,4,-1,4,5,2,5,2,5,1,0,2,-1,2,-1,2,-1,3,-1,3,5,5,5,5,5,6,4,6,5,6,4,1,6,1,-6,1,-6,6,-6,1,-5,1,-7,8,-6,8,-7,8,-7,-1,-8,-1,-5,-1,-8,6,-5,6,-1,7,0,7,-1,0,0,0,-14,7,-12,7]},

};

var saves = localStorage.getItem('saves');

if (saves) {
  saves = JSON.parse(decompress(saves));
} else saves = {};

